'\"
'\" Generated from file 'cookfs_fsindex\&.man' by tcllib/doctools with format 'nroff'
'\" Copyright (c) 2010-2011 Wojciech Kocjan <wojciech@kocjan\&.org>
'\" Copyright (c) 2024 Konstantin Kushnir <chpock@gmail\&.com>
'\"
.TH "cookfs::fsindex" n 1\&.7\&.0 cookfs_fsindex "vfs::cookfs::fsindex"
.\" The -*- nroff -*- definitions below are for supplemental macros used
.\" in Tcl/Tk manual entries.
.\"
.\" .AP type name in/out ?indent?
.\"	Start paragraph describing an argument to a library procedure.
.\"	type is type of argument (int, etc.), in/out is either "in", "out",
.\"	or "in/out" to describe whether procedure reads or modifies arg,
.\"	and indent is equivalent to second arg of .IP (shouldn't ever be
.\"	needed;  use .AS below instead)
.\"
.\" .AS ?type? ?name?
.\"	Give maximum sizes of arguments for setting tab stops.  Type and
.\"	name are examples of largest possible arguments that will be passed
.\"	to .AP later.  If args are omitted, default tab stops are used.
.\"
.\" .BS
.\"	Start box enclosure.  From here until next .BE, everything will be
.\"	enclosed in one large box.
.\"
.\" .BE
.\"	End of box enclosure.
.\"
.\" .CS
.\"	Begin code excerpt.
.\"
.\" .CE
.\"	End code excerpt.
.\"
.\" .VS ?version? ?br?
.\"	Begin vertical sidebar, for use in marking newly-changed parts
.\"	of man pages.  The first argument is ignored and used for recording
.\"	the version when the .VS was added, so that the sidebars can be
.\"	found and removed when they reach a certain age.  If another argument
.\"	is present, then a line break is forced before starting the sidebar.
.\"
.\" .VE
.\"	End of vertical sidebar.
.\"
.\" .DS
.\"	Begin an indented unfilled display.
.\"
.\" .DE
.\"	End of indented unfilled display.
.\"
.\" .SO ?manpage?
.\"	Start of list of standard options for a Tk widget. The manpage
.\"	argument defines where to look up the standard options; if
.\"	omitted, defaults to "options". The options follow on successive
.\"	lines, in three columns separated by tabs.
.\"
.\" .SE
.\"	End of list of standard options for a Tk widget.
.\"
.\" .OP cmdName dbName dbClass
.\"	Start of description of a specific option.  cmdName gives the
.\"	option's name as specified in the class command, dbName gives
.\"	the option's name in the option database, and dbClass gives
.\"	the option's class in the option database.
.\"
.\" .UL arg1 arg2
.\"	Print arg1 underlined, then print arg2 normally.
.\"
.\" .QW arg1 ?arg2?
.\"	Print arg1 in quotes, then arg2 normally (for trailing punctuation).
.\"
.\" .PQ arg1 ?arg2?
.\"	Print an open parenthesis, arg1 in quotes, then arg2 normally
.\"	(for trailing punctuation) and then a closing parenthesis.
.\"
.\"	# Set up traps and other miscellaneous stuff for Tcl/Tk man pages.
.if t .wh -1.3i ^B
.nr ^l \n(.l
.ad b
.\"	# Start an argument description
.de AP
.ie !"\\$4"" .TP \\$4
.el \{\
.   ie !"\\$2"" .TP \\n()Cu
.   el          .TP 15
.\}
.ta \\n()Au \\n()Bu
.ie !"\\$3"" \{\
\&\\$1 \\fI\\$2\\fP (\\$3)
.\".b
.\}
.el \{\
.br
.ie !"\\$2"" \{\
\&\\$1	\\fI\\$2\\fP
.\}
.el \{\
\&\\fI\\$1\\fP
.\}
.\}
..
.\"	# define tabbing values for .AP
.de AS
.nr )A 10n
.if !"\\$1"" .nr )A \\w'\\$1'u+3n
.nr )B \\n()Au+15n
.\"
.if !"\\$2"" .nr )B \\w'\\$2'u+\\n()Au+3n
.nr )C \\n()Bu+\\w'(in/out)'u+2n
..
.AS Tcl_Interp Tcl_CreateInterp in/out
.\"	# BS - start boxed text
.\"	# ^y = starting y location
.\"	# ^b = 1
.de BS
.br
.mk ^y
.nr ^b 1u
.if n .nf
.if n .ti 0
.if n \l'\\n(.lu\(ul'
.if n .fi
..
.\"	# BE - end boxed text (draw box now)
.de BE
.nf
.ti 0
.mk ^t
.ie n \l'\\n(^lu\(ul'
.el \{\
.\"	Draw four-sided box normally, but don't draw top of
.\"	box if the box started on an earlier page.
.ie !\\n(^b-1 \{\
\h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.el \}\
\h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.\}
.fi
.br
.nr ^b 0
..
.\"	# VS - start vertical sidebar
.\"	# ^Y = starting y location
.\"	# ^v = 1 (for troff;  for nroff this doesn't matter)
.de VS
.if !"\\$2"" .br
.mk ^Y
.ie n 'mc \s12\(br\s0
.el .nr ^v 1u
..
.\"	# VE - end of vertical sidebar
.de VE
.ie n 'mc
.el \{\
.ev 2
.nf
.ti 0
.mk ^t
\h'|\\n(^lu+3n'\L'|\\n(^Yu-1v\(bv'\v'\\n(^tu+1v-\\n(^Yu'\h'-|\\n(^lu+3n'
.sp -1
.fi
.ev
.\}
.nr ^v 0
..
.\"	# Special macro to handle page bottom:  finish off current
.\"	# box/sidebar if in box/sidebar mode, then invoked standard
.\"	# page bottom macro.
.de ^B
.ev 2
'ti 0
'nf
.mk ^t
.if \\n(^b \{\
.\"	Draw three-sided box if this is the box's first page,
.\"	draw two sides but no top otherwise.
.ie !\\n(^b-1 \h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.el \h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.\}
.if \\n(^v \{\
.nr ^x \\n(^tu+1v-\\n(^Yu
\kx\h'-\\nxu'\h'|\\n(^lu+3n'\ky\L'-\\n(^xu'\v'\\n(^xu'\h'|0u'\c
.\}
.bp
'fi
.ev
.if \\n(^b \{\
.mk ^y
.nr ^b 2
.\}
.if \\n(^v \{\
.mk ^Y
.\}
..
.\"	# DS - begin display
.de DS
.RS
.nf
.sp
..
.\"	# DE - end display
.de DE
.fi
.RE
.sp
..
.\"	# SO - start of list of standard options
.de SO
'ie '\\$1'' .ds So \\fBoptions\\fR
'el .ds So \\fB\\$1\\fR
.SH "STANDARD OPTIONS"
.LP
.nf
.ta 5.5c 11c
.ft B
..
.\"	# SE - end of list of standard options
.de SE
.fi
.ft R
.LP
See the \\*(So manual entry for details on the standard options.
..
.\"	# OP - start of full description for a single option
.de OP
.LP
.nf
.ta 4c
Command-Line Name:	\\fB\\$1\\fR
Database Name:	\\fB\\$2\\fR
Database Class:	\\fB\\$3\\fR
.fi
.IP
..
.\"	# CS - begin code excerpt
.de CS
.RS
.nf
.ta .25i .5i .75i 1i
..
.\"	# CE - end code excerpt
.de CE
.fi
.RE
..
.\"	# UL - underline word
.de UL
\\$1\l'|0\(ul'\\$2
..
.\"	# QW - apply quotation marks to word
.de QW
.ie '\\*(lq'"' ``\\$1''\\$2
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\$2
..
.\"	# PQ - apply parens and quotation marks to word
.de PQ
.ie '\\*(lq'"' (``\\$1''\\$2)\\$3
.\"" fix emacs highlighting
.el (\\*(lq\\$1\\*(rq\\$2)\\$3
..
.\"	# QR - quoted range
.de QR
.ie '\\*(lq'"' ``\\$1''\\-``\\$2''\\$3
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\-\\*(lq\\$2\\*(rq\\$3
..
.\"	# MT - "empty" string
.de MT
.QW ""
..
.BS
.SH NAME
cookfs::fsindex \- vfs::cookfs::fsindex
.SH SYNOPSIS
package require \fBTcl 8\&.5\fR
.sp
package require \fBvfs::cookfs ?1\&.7\&.0?\fR
.sp
\fB::cookfs::fsindex\fR ?\fIexportedData\fR?
.sp
\fIfsindexHandle\fR \fBexport\fR
.sp
\fIfsindexHandle\fR \fBlist\fR \fIpath\fR
.sp
\fIfsindexHandle\fR \fBget\fR \fIpath\fR
.sp
\fIfsindexHandle\fR \fBgetmtime\fR \fIpath\fR
.sp
\fIfsindexHandle\fR \fBset\fR \fIpath\fR \fImtime\fR ?\fIdata\fR?
.sp
\fIfsindexHandle\fR \fBsetmtime\fR \fIpath\fR \fImtime\fR
.sp
\fIfsindexHandle\fR \fBunset\fR \fIpath\fR
.sp
\fIfsindexHandle\fR \fBdelete\fR
.sp
\fIfsindexHandle\fR \fBgetmetadata\fR \fIname\fR ?\fIdefaultValue\fR?
.sp
\fIfsindexHandle\fR \fBsetmetadata\fR \fIname\fR \fIvalue\fR
.sp
\fIfsindexHandle\fR \fBunsetmetadata\fR \fIname\fR
.sp
\fIfsindexHandle\fR \fBgetblockusage\fR \fIblock\fR
.sp
\fIfsindexHandle\fR \fBchangecount\fR
.sp
.BE
.SH DESCRIPTION
Cookfs fsindex provide a low level mechanism for storing mapping between files in cookfs archive and pages they correspond to\&.
.PP
This mechanism should only be used by advanced users and is only documented for reference\&.
.SH COMMANDS
.TP
\fB::cookfs::fsindex\fR ?\fIexportedData\fR?
Creates a new fsindex object\&.
If \fIexportedData\fR is specified, index is imported from this data and error is
thrown if data is not correct\&.
.sp
If \fIexportedData\fR is not provided, new fsindex is created\&.
.sp
The command returns a fsindex command that can be used to perform actions on index\&.
.TP
\fIfsindexHandle\fR \fBexport\fR
Export current index as binary data\&.
This data can be stored in \fBcookfs_pages\fR object and later on
imported using \fBcookfs::fsindex\fR command\&.
.TP
\fIfsindexHandle\fR \fBlist\fR \fIpath\fR
List all entries in specified path\&. Path should be separated by slashes\&.
Specify empty path to list contents of main directory for archive\&.
.TP
\fIfsindexHandle\fR \fBget\fR \fIpath\fR
Get information about specified entry\&. Path should be separated by slashes\&.
.sp
Method \fBget\fR returns file information as a list\&.
For directories, this is a single-element list containing file modification time\&.
For files, first element is modification time, second element is file size and
third element is a list of block-offset-size triplets\&.
.sp
See \fBBLOCK-OFFSET-SIZE INFORMATION\fR for more details on
block-offset-size triplets\&.
.TP
\fIfsindexHandle\fR \fBgetmtime\fR \fIpath\fR
Get file modification about specified entry\&. Path should be separated by slashes\&.
.TP
\fIfsindexHandle\fR \fBset\fR \fIpath\fR \fImtime\fR ?\fIdata\fR?
Set information about specified entry\&. Path should be separated by slashes\&.
If \fIdata\fR is omitted, new entry is created as directory\&.
.sp
If \fIdata\fR specified, entry is created as file and data is created as
block-offset-size triplets\&.
.sp
See \fBBLOCK-OFFSET-SIZE INFORMATION\fR for more details on
block-offset-size triplets\&.
.TP
\fIfsindexHandle\fR \fBsetmtime\fR \fIpath\fR \fImtime\fR
Set file modification about specified entry\&. Path should be separated by slashes\&.
.TP
\fIfsindexHandle\fR \fBunset\fR \fIpath\fR
Deletes specified entry\&. Path should be separated by slashes\&.
.TP
\fIfsindexHandle\fR \fBdelete\fR
Delete fsindex object\&. Frees up all memory associated with an index\&.
.TP
\fIfsindexHandle\fR \fBgetmetadata\fR \fIname\fR ?\fIdefaultValue\fR?
Get metadata with specified \fIname\fR from an index, if it exists\&.
If metadata does not exist, \fIdefaultValue\fR is returned if specified\&.
If metadata does not exist and \fIdefaultValue\fR is not specified, an error is thrown\&.
.TP
\fIfsindexHandle\fR \fBsetmetadata\fR \fIname\fR \fIvalue\fR
Set metadata with specified \fIname\fR to \fIvalue\fR\&.
Overwrites previous value if it existed\&.
.TP
\fIfsindexHandle\fR \fBunsetmetadata\fR \fIname\fR
Removes metadata with specified name from index\&.
.TP
\fIfsindexHandle\fR \fBgetblockusage\fR \fIblock\fR
Returns the number of files using the specified block (index of cookfs page)\&.
Returns zero if the specified block is not used by any file\&.
.TP
\fIfsindexHandle\fR \fBchangecount\fR
Returns a counter corresponding to the number of changes to an index since
the last import/export or create operation\&. Initially, this value is \fB0\fR\&.
.sp
This counter is incremented by one after each \fBset\fR, \fBunset\fR,
\fBsetmetadata\fR, \fBunsetmetadata\fR or \fBsetmtime\fR operation\&.
.sp
This method can be used to check whether changes have been made to an index
and whether it should be saved before deleting it\&.
.PP
.SH "BLOCK-OFFSET-SIZE INFORMATION"
Files in cookfs are described storing block-offset-size triplets\&. These specify
block (index of cookfs page), offset in the page and size of the data in a page\&.
Each 3 elements of a list describe one part of a file\&.
.PP
For example \fB{1 0 2048}\fR specifies that page with index \fB1\fR
should be used, data starts at offset \fB0\fR and that
data is \fB2048\fR bytes\&.
Index data of \fB{0 0 65536 1 10240 40960}\fR specifies that data is
first stored in page \fB0\fR and uses \fB65536\fR bytes from this page\&.
Next, data is stored in page \fB1\fR from \fB10240\fR-th byte and uses up
another \fB40960\fR bytes\&. This means that file's total size is 106496 bytes\&.
.PP
Cookfs index only stores block-offset-size triplets and calculates size
based on all sizes of its elements\&.
Therefore setting cookfs data only requires specifying list itself,
not summed up size of the file\&.
.SH "SEE ALSO"
cookfs_fsindex
.SH KEYWORDS
cookfs, vfs
.SH COPYRIGHT
.nf
Copyright (c) 2010-2011 Wojciech Kocjan <wojciech@kocjan\&.org>
Copyright (c) 2024 Konstantin Kushnir <chpock@gmail\&.com>

.fi
