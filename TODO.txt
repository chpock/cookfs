* Add support for encrypted/password protected files
* Add support for full-featured C-API. It should be possible to set all
  possible options, similar to the curl curl_easy_setopt() interface.
* Add documentation as HTML to github pages
* Add CI configuration with --disable-c-crypto
* Consider mapping archive to memory to improve performance on readonly VFS
* Add ability to disable custom compression to reduce size footprint when it is not needed
* Add ability to disable async compression to reduce size footprint when it is not needed
* Add MD5 hash validation on load for pgindex data
* Add MD5 hash validation on load for fsindex data
* Add MD5 hash validation on load for all pages data
* Update bzip2 and use it as a submodule. Perhaps this will get rid of its compile-time warnings.
* Add support for storing file permissions and attributes (for Windows platform)
* Add support for 'file attribute' commands to return general attributes and attributes like zipfs in Tcl9
* Add support for 'zipfs mkimg'-like command

* Allow to get/set parameters and manage cookfs via global command ::cookfs
cookfs password $mount_point "password"
cookfs compression $mount_point "zlib"
cookfs copy /foo/bar $mount_point

== Examples

* Add simple example of tclsh with cookfs. Compare with tclsh9+zipfs (size and
loading speed). This example will cover cookfs usage from C side.

* Add an example of a Tcl archiver application that uses the cookfs format.
It will be like any other archiver and will support file
compression/decompression. This example will cover cookfs usage from Tcl side.

