* Add documentation as HTML to github pages
* Consider mapping archive to memory to improve performance on readonly VFS
* Add ability to disable custom compression to reduce size footprint when it is not needed
* Add ability to disable async compression to reduce size footprint when it is not needed
* Update bzip2 and use it as a submodule. Perhaps this will get rid of its compile-time warnings.
* Add ability/subcommand to copy files from/to cookfs more efficiently than using 'file copy'.
  It can be something like 'cookfs copy <from disk> <cookfs endpoint>"
* Add ability to get a list of pages with their properties (compression, compression level,
  encryption, compressed size, uncompressed size)
* Add ability to get information about pagesindex and fsindex (compression, compression level,
  encryption, compressed size, uncompressed size). This will be useful for analyzing the contents
  of a cookfs archive.
* Add support for storing file permissions and attributes (for Windows platform)
* Add support for 'file attribute' commands to return general attributes and attributes like zipfs in Tcl9
* Add support for 'zipfs mkimg'-like command

* Allow to get/set parameters and manage cookfs via global command ::cookfs
cookfs password $mount_point "password"
cookfs compression $mount_point "zlib"
cookfs copy /foo/bar $mount_point

== Examples

* Add simple example of tclsh with cookfs. Compare with tclsh9+zipfs (size and
loading speed). This example will cover cookfs usage from C side.

* Add an example of a Tcl archiver application that uses the cookfs format.
It will be like any other archiver and will support file
compression/decompression. This example will cover cookfs usage from Tcl side.

